# Elasticsearch Helm Chart의 values.yaml을 기반으로 작성
# 참고: https://github.com/elastic/helm-charts/blob/main/elasticsearch/values.yaml

clusterName: "elastic-logging-cluster" # 클러스터 이름 지정
nodeGroup: "default" # 노드 그룹 이름

# 단일 노드 Elasticsearch (개발/테스트용)
# 프로덕션에서는 replicaCount를 3 이상으로 설정하고,
# 노드 구성(master, data, ingest)을 분리하여 안정성을 확보해야 합니다.
replicaCount: 1

esJavaOpts: "-Xmx1g -Xms1g" # Elasticsearch JVM 메모리 설정 (테스트용, 실제 환경에선 충분히 할당)

resources:
  requests:
    cpu: "500m"  # 0.5 CPU 코어 요청
    memory: "2Gi" # 2GB 메모리 요청
  limits:
    cpu: "1"    # 1 CPU 코어 제한
    memory: "2Gi" # 2GB 메모리 제한

volumeClaimTemplate:
  accessModes: [ "ReadWriteOnce" ]
  storageClassName: "your-storage-class-name" # 사용 중인 StorageClass 이름으로 변경!
  resources:
    requests:
      storage: "20Gi" # 20GB 스토리지 요청 (필요에 따라 조절)

# Ingress를 통해 외부에서 접근할 필요는 보통 없습니다. (Kibana가 연결)
ingress:
  enabled: false

# Service (ClusterIP로 충분, Kibana가 내부에서 연결)
service:
  type: ClusterIP

# 보안 비활성화 (개발/테스트용, 실제 환경에선 활성화 권장)
# X-Pack Security (Basic Authentication 등)
# 자세한 설정은 Elastic 공식 문서 참고: https://www.elastic.co/guide/en/elasticsearch/reference/current/security-settings.html
# xpack:
#   security:
#     enabled: true
#     authc:
#       realms:
#         file:
#           file1:
#             order: 0
# userGeneratedPasswords: true
